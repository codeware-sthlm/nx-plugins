name: Nx migrate

on:
  workflow_dispatch:
  schedule:
    # Every day at 6am UTC
    - cron: '0 6 * * *'

jobs:
  nx-migrate:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_SEMVER_TOKEN }}
          fetch-depth: 0

      - name: Set git metadata
        run: |
          git config user.name "${{ vars.SEMVER_COMMIT_NAME }}"
          git config user.email "${{ vars.SEMVER_COMMIT_EMAIL }}"

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'yarn'

      - run: yarn install --immutable
        shell: bash

      - name: Check if @nx/workspace is outdated
        id: workspace
        run: |
          IS_OUTDATED=$(test ! -z "$(npm outdated @nx/workspace)" && echo true || echo false)
          echo $IS_OUTDATED
          echo "outdated=$IS_OUTDATED" >> $GITHUB_OUTPUT

      - name: Update @nx/workspace
        if: steps.workspace.outputs.outdated == 'true'
        run: yarn nx migrate latest

      - name: Install dependencies
        if: steps.workspace.outputs.outdated == 'true'
        run: yarn install --no-immutable

      - name: Check for migrations
        id: migrations
        if: steps.workspace.outputs.outdated == 'true'
        run: |
          MIGRATIONS_EXIST=$(test -f migrations.json && echo true || echo false)
          echo $MIGRATIONS_EXIST
          echo "exist=$MIGRATIONS_EXIST" >> $GITHUB_OUTPUT

      - name: Run @nx/workspace migrations
        if: steps.migrations.outputs.exist == 'true'
        run: yarn nx migrate --run-migrations

      - name: Run tests
        id: test
        if: steps.workspace.outputs.outdated == 'true'
        run: npx nx run-many -t lint,test,build -c ci
        continue-on-error: true

      - name: Run E2E
        id: e2e
        if: steps.workspace.outputs.outdated == 'true' && steps.test.outcome == 'success'
        run: yarn nx e2e nx-payload-e2e
        timeout-minutes: 30
        continue-on-error: true
        env:
          NX_DAEMON: true
          NX_NO_CLOUD: true

      - name: Commit changes
        if: steps.workspace.outputs.outdated == 'true'
        run: |
          LAST_VERSION=$(npm view @nx/workspace version)
          git add .
          [[ $(git status --porcelain) ]] && git commit -m "build: ðŸ“¦ update nx workspace to ${LAST_VERSION}" || echo "nothing to commit"

      - name: Publish ${LAST_VERSION}
        if: vars.NX_AUTO_MIGRATE == 'true' && steps.e2e.outcome == 'success'
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}
          force: true
          tags: true

      - name: Create PR
        if: (vars.NX_AUTO_MIGRATE == 'false' && steps.workspace.outputs.outdated == 'true') || steps.test.outcome == 'failure' || steps.e2e.outcome == 'failure'
        run: |
          LAST_VERSION=$(npm view @nx/workspace version)
          BRANCH="update-nx-workspace-${LAST_VERSION}"
          git checkout -b ${BRANCH}
          git push -f --set-upstream origin ${BRANCH}
          gh pr view ${BRANCH} || gh pr create -t "Update @nx/workspace to ${LAST_VERSION}" -b "Test status: ${{ steps.test.outcome }}\n\E2E status: ${{ steps.e2e.outcome }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GH_SEMVER_TOKEN }}
