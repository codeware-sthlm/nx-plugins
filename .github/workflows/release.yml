name: Release

# There's no value in releasing on every commit,
# so this process is better handled manually when needed.
on:
  workflow_dispatch:
    inputs:
      dry-run:
        description: Run release process without making any changes or pushing to npm
        default: true
        type: boolean

env:
  # TODO: Using last release tag pattern require a 'last-release' tag per package
  tag_last_release: false
  node_version: 18

jobs:
  test:
    runs-on: ubuntu-latest

    if: github.ref_name == 'master' || github.ref_name == 'beta'

    steps:
      - uses: actions/checkout@v4

      - name: Setup
        uses: ./.github/actions/setup
        with:
          node-version: ${{ env.node_version }}

      - name: Test
        uses: ./.github/actions/test

  release:
    runs-on: ubuntu-latest

    needs: [test]

    concurrency:
      group: ${{ github.ref }}

    steps:
      - uses: actions/checkout@v4

      - name: Setup
        uses: ./.github/actions/setup
        with:
          git-token: ${{ secrets.GH_SEMVER_TOKEN }}
          node-version: ${{ env.node_version }}
          commit-user-name: ${{ vars.SEMVER_COMMIT_NAME }}
          commit-user-email: ${{ vars.SEMVER_COMMIT_EMAIL }}

      - name: Release beta pre-minor on branch 'beta' and skip publish to npm
        id: beta
        shell: bash
        run: |
          options="${{ github.ref_name == 'beta' && '--baseBranch=beta --releaseAs=preminor --preid=beta --postTargets=github' }}"
          echo "options=$options" >> $GITHUB_OUTPUT

      # TODO: Should we only rely on affected and semver version lookup?
      # @see https://github.com/jscutlery/semver?tab=readme-ov-file#version-calculation
      # Returnded projects depends on last successful commit which doesn't have to be a release,
      # hence we might not get what we want?
      - name: Get affected projects
        id: affected
        uses: ./.github/actions/affected-projects
        with:
          node-version: ${{ env.node_version }}

      # Use `npx` instead of `yarn` because `yarn` sets NPM_* environment variables (like NPM_CONFIG_REGISTRY).
      # This affects `npm publish` ignoring the .npmrc file, which is set up by `setup-node` action.
      - name: Release version for affected projects
        if: ${{ steps.affected.outputs.count != '0' }}
        shell: bash
        env:
          dry-run: ${{ inputs.dry-run && '--dry-run --verbose' }}
          beta: ${{ steps.beta.outputs.options }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          npx nx run-many -t version ${{ env.beta }} -p ${{ steps.affected.outputs.projectsList }} --parallel false ${{ env.dry-run }}

      - name: Should tag last release?
        id: tag-last
        shell: bash
        run: |
          create=${{ steps.affected.outputs.count != 0 && inputs.dry-run == 'false' && env.tag_last_release == 'true' }}
          echo "create=$create" >> $GITHUB_OUTPUT

      - name: Tag last-release
        if: ${{ steps.tag-last.outputs.create == 'true' }}
        shell: bash
        run: git tag -f last-release

      - name: Push changes
        if: ${{ steps.tag-last.outputs.create == 'true' }}
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}
          force: true
          tags: true
