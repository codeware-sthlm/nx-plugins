name: Release

# There's no value in releasing on every commit,
# so this process is better handled manually when needed.
on:
  workflow_dispatch:
    inputs:
      package:
        description: Release a specific package or all packages
        required: false
        type: choice
        options:
          - all
          - create-nx-payload
          - nx-payload
        default: all

      release-type:
        description: Specify what kind of release to create
        required: false
        type: choice
        options:
          - auto
          - prerelease
          - premajor
          - minor
          - major
        default: auto

      empty-release:
        description: Force a patch increment even if library source didn't change?
        required: false
        type: boolean
        default: false

jobs:
  test:
    runs-on: ubuntu-latest

    if: github.ref_name == 'master'

    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/test
        with:
          codecov-token: ${{ secrets.CODECOV_TOKEN }}

  release:
    runs-on: ubuntu-latest

    needs: [test]

    concurrency:
      group: ${{ github.ref }}

    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_SEMVER_TOKEN }}
          fetch-depth: 0

      - name: Set git metadata
        run: |
          git config user.name "${{ vars.SEMVER_COMMIT_NAME }}"
          git config user.email "${{ vars.SEMVER_COMMIT_EMAIL }}"

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          check-latest: true
          cache: yarn
          # This also sets the right configuration in .npmrc
          # that reads NPM token from NPM_AUTH_TOKEN environment variable.
          # It creates a .npmrc in a temporary folder
          # and sets the NPM_CONFIG_USERCONFIG environment variable.
          registry-url: https://registry.npmjs.org

      - run: yarn install --immutable

      # Use `npx` instead of `yarn` because `yarn` sets NPM_* environment variables (like NPM_CONFIG_REGISTRY).
      # This affects `npm publish` ignoring the .npmrc file, which is set up by `setup-node` action.
      # Run for all version projects and let semver decide whether to create a new release for each project.
      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          configuration="${{ inputs.release-type != 'auto' && inputs.release-type || '' }}"
          projects="${{ inputs.package != 'all' && inputs.package || '' }}"
          npx nx run-many --target=version-publish --configuration=$configuration --projects=$projects --parallel=1 --nxBail=true --baseBranch=${{ github.ref_name }} --allowEmptyRelease=${{ inputs.empty-release }}
