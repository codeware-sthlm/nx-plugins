name: Release

# There's no value in releasing on every commit,
# so this process is better handled manually when needed.
on:
  workflow_dispatch:
    inputs:
      dry-run:
        description: Run release process without making any changes or pushing to npm
        default: true
        type: boolean

env:
  # TODO: Using last release tag pattern require a 'last-release' tag per package
  tag_last_release: false

jobs:
  test:
    runs-on: ubuntu-latest

    if: github.ref_name == 'master'

    env:
      node_version: 18

    steps:
      - uses: actions/checkout@v4

      - name: Setup
        uses: ./.github/actions/setup
        with:
          git-token: ${{ secrets.GH_SEMVER_TOKEN }}
          node_version: ${{ env.node_version }}
          commit-user-name: ${{ vars.SEMVER_COMMIT_NAME }}
          commit-user-email: ${{ vars.SEMVER_COMMIT_EMAIL }}

      - name: Test
        uses: ./.github/actions/test

  release:
    runs-on: ubuntu-latest

    needs: [test]

    concurrency:
      group: ${{ github.ref }}

    steps:
      - name: Setup
        uses: ./.github/actions/setup
        with:
          git-token: ${{ secrets.GH_SEMVER_TOKEN }}

      # Use `npx` instead of `yarn` because `yarn` sets NPM_* environment variables (like NPM_CONFIG_REGISTRY).
      # This affects `npm publish` ignoring the .npmrc file, which is set up by `setup-node` action.
      - run: npx nx affected -t version --parallel false ${{ inputs.dry-run && '--dry-run --verbose' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Tag last-release
        if: env.tag_last_release
        shell: bash
        run: git tag -f last-release

      - name: Push changes
        if: env.tag_last_release
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}
          force: true
          tags: true
