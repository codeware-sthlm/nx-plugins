name: Release

# There's no value in releasing on every commit,
# so this process is better handled manually when needed.
on:
  workflow_dispatch:
    inputs:
      release-type:
        description: What kind of release should be created?
        required: true
        type: choice
        options:
          - prerelease
          - premajor
          - release
          - major
        default: release

      package:
        description: Release a specific package or all packages
        required: true
        type: choice
        options:
          - all
          - create-nx-payload
          - nx-payload
          - workspace
        default: all

env:
  node_version: 18

jobs:
  test:
    runs-on: ubuntu-latest

    if: github.ref_name == 'master'

    steps:
      - uses: actions/checkout@v4

      - name: Setup
        uses: ./.github/actions/setup
        with:
          node-version: ${{ env.node_version }}

      - name: Test
        uses: ./.github/actions/test

  release:
    runs-on: ubuntu-latest

    needs: [test]

    concurrency:
      group: ${{ github.ref }}

    steps:
      - uses: actions/checkout@v4

      - name: Setup
        uses: ./.github/actions/setup
        with:
          git-token: ${{ secrets.GH_SEMVER_TOKEN }}
          node-version: ${{ env.node_version }}
          commit-user-name: ${{ vars.SEMVER_COMMIT_NAME }}
          commit-user-email: ${{ vars.SEMVER_COMMIT_EMAIL }}

      # Use `npx` instead of `yarn` because `yarn` sets NPM_* environment variables (like NPM_CONFIG_REGISTRY).
      # This affects `npm publish` ignoring the .npmrc file, which is set up by `setup-node` action.
      # Run for all version projects and let semver decide whether to create a new release for each project.
      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          projects="${{ inputs.package == 'all' && '' || inputs.package }}"
          npx nx run-many --target=version-publish --cconfiguration=${{ inputs.release-type }} --projects=$projects --parallel=1 --nxBail=true --push=true --baseBranch=${{ github.ref_name }}
