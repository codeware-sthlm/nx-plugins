name: E2E matrix

on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
  merge_group:
  push:
    branches:
      - master
  workflow_dispatch:
    inputs:
      debug-enabled:
        type: boolean
        description: 'Run the build with tmate debugging enabled (https://github.com/marketplace/actions/debugging-with-tmate)'
        required: false
        default: false

concurrency:
  group: ${{ github.workflow }}-${{ github.event.number || github.ref }}
  cancel-in-progress: true

env:
  NX_CLOUD_ACCESS_TOKEN: ${{ secrets.NX_CLOUD_ACCESS_TOKEN }}
  # https://yarnpkg.com/features/security#hardened-mode
  YARN_ENABLE_HARDENED_MODE: 0

jobs:
  preinstall:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
        node_version:
          - 20
          - 18
        exclude:
          - os: macos-latest
            node_version: 18
          - os: windows-latest
            node_version: 18

    name: Cache install (${{ matrix.os }}, node v${{ matrix.node_version }})
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install PNPM
        run: npm install -g @pnpm/exe@8

      - name: Set node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node_version }}
          cache: 'yarn'

      - name: Cache node_modules
        id: cache-modules
        uses: actions/cache@v4
        with:
          lookup-only: true
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ matrix.node_version }}-${{ github.run_id }}

      - name: Install packages
        if: steps.cache-modules.outputs.cache-hit != 'true'
        run: yarn install --immutable

  e2e:
    needs: preinstall
    permissions:
      contents: read
    runs-on: ${{ matrix.os }}
    timeout-minutes: 90
    strategy:
      matrix:
        os:
          - ubuntu-latest
          # - macos-latest
          # - windows-latest
        node_version:
          - 20
          # - 18
        package_manager:
          - npm
          - yarn
          # - pnpm
        project:
          - nx-payload-e2e
        include:
          # os short names
          - os: ubuntu-latest
            os_name: 'Linux'
          # - os: macos-latest
          #   os_name: 'MacOS'
          # - os: windows-latest
          #   os_name: 'Windows'
          # test timeouts
          - os: ubuntu-latest
            os_timeout: 60
          # - os: macos-latest
          #   os_timeout: 60
          # - os: windows-latest
          # os_timeout: 60
          # Apply 'skip-docker' configuration for all but Node 20 on Linux
          - os: ubuntu-latest
            verdaccio_host: 'localhost'
          # - os: ubuntu-latest
          #   node_version: 18
          #   configuration: 'skip-docker'
          - os: ubuntu-latest
            package_manager: yarn
            configuration: 'skip-docker'
          # - os: ubuntu-latest
          #   package_manager: pnpm
          #   configuration: 'skip-docker'
          # - os: macos-latest
          #   configuration: 'skip-docker'
          # - os: windows-latest
          #   configuration: 'skip-docker'
        # exclude:
        #   # run just npm v20 on macos and windows
        #   - os: macos-latest
        #     package_manager: yarn
        #   - os: macos-latest
        #     package_manager: pnpm
        #   - os: macos-latest
        #     node_version: 18
        #   - os: windows-latest
        #     package_manager: yarn
        #   - os: windows-latest
        #     package_manager: pnpm
        #   - os: windows-latest
        #     node_version: 18
      fail-fast: false

    name: E2E ${{ matrix.os_name }}/${{ matrix.package_manager }}/${{ matrix.node_version }} ${{ join(matrix.project) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install PNPM
        run: npm install -g @pnpm/exe@8

      - name: Use Node.js ${{ matrix.node_version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node_version }}
          cache: 'yarn'

      - name: Cache node_modules
        id: cache-modules
        uses: actions/cache@v4
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ matrix.node_version }}-${{ github.run_id }}

      - name: Install packages
        run: yarn install --immutable

      - name: Set starting timestamp
        id: before-e2e
        run: |
          echo "timestamp=$(date +%s)" >> $GITHUB_OUTPUT

      - name: Run e2e tests
        id: e2e-run
        run: yarn nx e2e ${{ matrix.project }} -c ${{ matrix.configuration }}
        timeout-minutes: ${{ matrix.os_timeout }}
        env:
          YARN_ENABLE_IMMUTABLE_INSTALLS: false # DEBUG
          CDWR_E2E_PACKAGE_MANAGER: ${{ matrix.package_manager }}
          CDWR_E2E_VERDACCIO_HOST: ${{ matrix.verdaccio_host }}
          CDWR_DEBUG_LOGGING: 'true'
          NX_CACHE_DIRECTORY: 'tmp'
          NX_PERF_LOGGING: 'false'
          NX_NO_CLOUD: ${{ contains(github.head_ref || github.ref_name, 'renovate') }}
          # NX_DAEMON defaults to 'true' unless explicitly set to 'false'
          NX_DAEMON: ${{ vars.NX_DAEMON == 'false' && 'false' || 'true' }}
          # NX_VERBOSE_LOGGING defaults to 'false' unless explicitly set to 'true'
          NX_VERBOSE_LOGGING: ${{ vars.NX_VERBOSE_LOGGING == 'true' && 'true' || 'false' }}

      - name: Setup tmate session
        if: ${{ github.event_name == 'workflow_dispatch' && inputs.debug-enabled && failure() }}
        uses: mxschmitt/action-tmate@v3.18
        timeout-minutes: 15
        env:
          # disable sudo for windows debugging
          sudo: ${{ matrix.os != 'windows-latest' }}
        with:
          sudo: ${{ env.sudo }}
