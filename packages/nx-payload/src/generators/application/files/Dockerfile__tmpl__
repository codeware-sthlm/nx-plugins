# Payload app
FROM node:18 as build

ARG MONGO_URL
ARG NODE_ENV
ARG PAYLOAD_PUBLIC_SERVER_URL
ARG PORT

ENV MONGO_URL=${MONGO_URL}
ENV NODE_ENV=${NODE_ENV}
ENV PAYLOAD_PUBLIC_SERVER_URL=${PAYLOAD_PUBLIC_SERVER_URL}
ENV PORT=${PORT}

WORKDIR /app

COPY package.json yarn.lock ./
RUN yarn install --silent --no-progress

COPY . .

# Admin bundle need the configuration when building a static app
# https://payloadcms.com/docs/configuration/overview
RUN PAYLOAD_CONFIG_PATH=<%= projectRoot %>/src/payload.config.ts \
  yarn nx build <%= name %> --no-cloud

# Final image
FROM node:18-alpine3.18
WORKDIR /app

# We'll create a structure similar to scaffolding a default payload workspace
COPY --from=build /app/build ./build
COPY --from=build /app/dist/<%= projectRoot %>/src ./dist
COPY --from=build /app/dist/<%= projectRoot %>/package.json ./

# 1. Create symlink to root which will make Payload find it natively
#    without setting PAYLOAD_CONFIG_PATH.
# 2. Node server needs production dependencies to run.
RUN ln -s ./dist/payload.config.js . && \
  yarn install --prod --silent --no-progress

EXPOSE 3000

CMD ["node", "dist/main.js"]
