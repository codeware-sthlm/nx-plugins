# <%= name %>

Payload CMS admin application generated by Nx plugin `@cdwr/nx-payload`.

## Getting started

The application can be started in Docker with a local Mongo database instance.

```sh
nx dx:launch <%= name %>
```

### Admin page

<http://localhost:3000/admin>

### Mongo connection

`mongodb://mongo/<%= name %>`

### Stop and remove Docker containers

```sh
nx dx:down <%= name %>
```

## Serve application and database manually

Run MongoDB in Docker and application in dev mode.

### Descide where your MongoDB is hosted

1. Start in a local Docker container (development)

   ```sh
   docker run --rm -d -p 27017:27017 mongo
   ```

2. Custom hosting (production/staging/test)

   Edit `<%= directory %>/.env` and set environment variable `MONGO_URL` to the instance of choice.

### App dev mode

```sh
nx serve <%= name %>
```

## Running tests

```sh
nx test <%= name %>
```

```sh
nx lint <%= name %>
```

## About databases

### Mongo Database

Payload requires a running Mongo instance to work properly.

Production deployments must use something stable, for example [MongoDB Atlas](https://www.mongodb.com/atlas).
But for local test and development it's very easy and flexible to start MongoDB in a local Docker container instead.
