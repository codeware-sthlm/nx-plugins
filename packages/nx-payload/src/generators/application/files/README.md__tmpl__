# <%= name %>

Payload admin application generated by Nx plugin `@cdwr/nx-payload`.

## Getting started

The application can be started in Docker with a local Mongo database instance.

```sh
npx nx start <%= name %>
```

### Admin page

<http://localhost:3000/admin>

### Mongo connection

`mongodb://mongo/<%= name %>`

### Stop and remove Docker containers

```sh
npx nx stop <%= name %>
```

> Mongo database is stored in a persistent volume, so containers can be stopped and started without loosing the data

## Serve application in development mode

Run MongoDB in Docker and application in dev mode.

```sh
npx nx serve <%= name %>
```

## Running tests

```sh
npx nx test <%= name %>
```

```sh
npx nx lint <%= name %>
```

## About databases

### Mongo Database

Payload requires a running Mongo instance to work properly.

Production deployments must use something stable, for example [MongoDB Atlas](https://www.mongodb.com/atlas).
But for local test and development it's very easy and flexible to start MongoDB in a local Docker container instead.

